package com.liuyun.site.dao.jdbc.mapper.base;

import com.liuyun.site.domain.CreditCard;
import java.sql.ResultSet;
import java.sql.SQLException;

public abstract class AbsractCreditCardMapper {
	
	protected void setProperty(ResultSet rs, CreditCard b) throws SQLException {
		b.setCard_id(rs.getInt("card_id"));
		b.setName(rs.getString("name"));
		b.setIssuing_bank(rs.getString("issuing_bank"));
		b.setIssuing_nstitution(rs.getString("issuing_nstitution"));
		b.setIssuing_status(rs.getString("issuing_status"));
		b.setCheck_style(rs.getString("check_style"));
		b.setInterest(rs.getString("interest"));
		b.setTel(rs.getString("tel"));
		b.setCurrency(rs.getString("currency"));
		b.setGrade(rs.getString("grade"));
		b.setBorrowing_limit(rs.getString("borrowing_limit"));
		b.setInterest_free(rs.getString("interest_free"));
		b.setIntegral_policy(rs.getString("integral_policy"));
		b.setIntegral_indate(rs.getString("integral_indate"));
		b.setCredit_rules(rs.getString("credit_rules"));
		b.setScoring_rules(rs.getString("scoring_rules"));
		b.setInstallment(rs.getString("installment"));
		b.setAmount(rs.getString("amount"));
		b.setFee_payment(rs.getString("fee_payment"));
		b.setApplicable_fee(rs.getString("applicable_fee"));
		b.setPrepayment(rs.getString("prepayment"));
		b.setOpen_card(rs.getString("open_card"));
		b.setRepea_card(rs.getString("repea_card"));
		b.setApp_condition(rs.getString("app_condition"));
		b.setApp_way(rs.getString("app_way"));
		b.setSubmit_info(rs.getString("submit_info"));
		b.setSupplement_num(rs.getString("supplement_num"));
		b.setSupplement_app(rs.getString("supplement_app"));
		b.setReport_loss(rs.getString("report_loss"));
		b.setLoss_protection(rs.getString("loss_protection"));
		b.setLoss_tel(rs.getString("loss_tel"));
		b.setLowest_refund(rs.getString("lowest_refund"));
		b.setAllopatry_back_fee(rs.getString("allopatry_back_fee"));
		b.setRmb_repayment(rs.getString("rmb_repayment"));
		b.setForeign_repayment(rs.getString("foreign_repayment"));
		b.setSpecial_repayment(rs.getString("special_repayment"));
		b.setCard_features(rs.getString("card_features"));
		b.setAdd_service(rs.getString("add_service"));
		b.setJoint_discount(rs.getString("joint_discount"));
		b.setMain_card_fee(rs.getString("main_card_fee"));
		b.setYear_cut_rules(rs.getString("supplement_card_fee"));
		b.setSupplement_card_fee(rs.getString("year_cut_rules"));
		b.setFee_date(rs.getString("fee_date"));
		b.setLocal_fee(rs.getString("local_fee"));
		b.setLocal_interbank_fee(rs.getString("local_interbank_fee"));
		b.setOffsite_fee(rs.getString("offsite_fee"));
		b.setOffsite_interbank_fee(rs.getString("offsite_interbank_fee"));
		b.setOverseas_pay_fee(rs.getString("overseas_pay_fee"));
		b.setOverseas_unpay_fee(rs.getString("overseas_unpay_fee"));
		b.setOverseas_meet_fee(rs.getString("overseas_meet_fee"));
		b.setEnchashment_limit(rs.getString("enchashment_limit"));
		b.setLocalback_fee(rs.getString("localback_fee"));
		b.setLocal_interbank_back_fee(rs.getString("local_interbank_back_fee"));
		b.setOffsite_overflow_back_fee(rs.getString("offsite_overflow_back_fee"));
		b.setOffsite_interbank_back_fee(rs.getString("offsite_interbank_back_fee"));
		b.setOverseas_pay_back_fee(rs.getString("overseas_pay_back_fee"));
		b.setOverseas_unpay_back_fee(rs.getString("overseas_unpay_back_fee"));
		b.setOverflow_back_rules(rs.getString("overflow_back_rules"));
		b.setMessage_money(rs.getString("message_money"));
		b.setOverseas_fee(rs.getString("overseas_fee"));
		b.setChange_card(rs.getString("change_card"));
		b.setAhead_change_card(rs.getString("ahead_change_card"));
		b.setExpress_fee(rs.getString("express_fee"));
		b.setStatement_fee(rs.getString("statement_fee"));
		b.setStatement_free_clause(rs.getString("statement_free_clause"));
		b.setLoss_fee(rs.getString("loss_fee"));
		b.setReset_password_fee(rs.getString("reset_password_fee"));
		b.setSelfdom_card_fee(rs.getString("selfdom_card_fee"));
		b.setForeign_convert_fee(rs.getString("foreign_convert_fee"));
		b.setSlip_fee(rs.getString("slip_fee"));
		b.setSlip_fee_copy(rs.getString("slip_fee_copy"));
		b.setSlip_fee_foreign(rs.getString("slip_fee_foreign"));
		b.setSlip_fee_copy_foreign(rs.getString("slip_fee_copy_foreign"));
		b.setOverdue_fine(rs.getString("overdue_fine"));
		b.setTransfinite_fee(rs.getString("transfinite_fee"));
		b.setType_value(rs.getInt("type_value"));
		b.setLitpic(rs.getString("litpic"));
	}
}